package productManage.action.system;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;

import org.springframework.beans.factory.annotation.Autowired;

import productManage.action.BaseAction;
import productManage.model.User;
import productManage.model.wy.Department;
import productManage.model.wy.Role;
import productManage.model.wy.UserRole;
import productManage.service.system.DepartmentService;
import productManage.service.system.RoleService;
import productManage.service.system.UserRoleService;
import productManage.service.system.UserService;

public class ShowUserRoleAction extends BaseAction{
	
	private static final long serialVersionUID = 1L;
	
	@Autowired
	private UserRoleService userRoleService;
	@Autowired
	private UserService userService;
	@Autowired
	private RoleService roleService;
	private List<UserRole> userRoleList;
	private List<User> userList;
	
	private List<RoleVO> roleList;

	private String selectedUserId;
	
	public UserService getUserService() {
		return userService;
	}

	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	public RoleService getRoleService() {
		return roleService;
	}

	public void setRoleService(RoleService roleService) {
		this.roleService = roleService;
	}

	public UserRoleService getUserRoleService() {
		return userRoleService;
	}

	public void setUserRoleService(UserRoleService userRoleService) {
		this.userRoleService = userRoleService;
	}
	
	public List<UserRole> getUserRoleList() {
		return userRoleList;
	}

	public void setUserRoleList(List<UserRole> userRoleList) {
		this.userRoleList = userRoleList;
	}

	public List<User> getUserList() {
		return userList;
	}

	public void setUserList(List<User> userList) {
		this.userList = userList;
	}

	public List<RoleVO> getRoleList() {
		return roleList;
	}

	public void setRoleList(List<RoleVO> roleList) {
		this.roleList = roleList;
	}

	public String getSelectedUserId() {
		return selectedUserId;
	}

	public void setSelectedUserId(String selectedUserId) {
		this.selectedUserId = selectedUserId;
	}
	
	public String showUserRole(){
		userList = userService.findAll();
		List<Role> roleDtoList = roleService.findAll();
		
		roleList = new ArrayList<>();
		for(Role role: roleDtoList) {
			roleList.add(new RoleVO(role, false));
		}
		
		return SUCCESS;
	}
	
	public String showSelectedUser(){
		String userName = request.getParameter("userName");
		userList = userService.getUserByName(userName);
		List<Role> roleDtoList = roleService.findAll();
		
		roleList = new ArrayList<>();
		for(Role role: roleDtoList) {
			roleList.add(new RoleVO(role, false));
		}
		
		return SUCCESS;
	}
	
	public String showRoleOfUser(){
		int userId = Integer.parseInt(request.getParameter("userName"));
		selectedUserId = request.getParameter("userName");
		
		userList = userService.findAll();
		roleList = new ArrayList<>();
		List<Role> roleDtoList = roleService.findAll();

		List<Role> roleOfUser = userRoleService.findRoleOfUser(userId);//根据用户id获取到了他的角色列表
		
		List<Object> isSelected = new ArrayList<Object>();
		
		for(int i = 0;i < roleDtoList.size();i++){
			Role roleItem = roleDtoList.get(i);
			
			boolean selected = false;
			
			for(int k = 0;k < roleOfUser.size();k++){
				Role roleItemOfUser = roleOfUser.get(k);
				if(roleItemOfUser.getRoleID() == roleItem.getRoleID()){
					selected = true;
				}
			}
			
			isSelected.add(selected);
			
			roleList.add(new RoleVO(roleItem, selected));
		}
		
		return SUCCESS;
	}

	public String saveRoleOfUser(){
		int userId = Integer.parseInt(request.getParameter("userId"));
		System.out.println("userId:" + userId);
		
		String[] roleIdList = request.getParameterValues("role");
		
		for(int i = 0;i < roleIdList.length;i++){
			System.out.print(roleIdList[i]);
			System.out.print(",");
			
			List<Role> roleOfUser = userRoleService.findRoleOfUser(userId);
			Role roleItem = roleService.findById(roleIdList[i]);
			
			//检验该角色是否被用户拥有
			boolean isHad = false;
			for(Role role: roleOfUser) {
				if(role.getRoleID() == Integer.parseInt(roleIdList[i])){
					isHad = true;
				}
			}
			
			if(!isHad){
				UserRole roleUser = new UserRole();
				roleUser.setUserId(userId);
				roleUser.setRoleID(Integer.parseInt(roleIdList[i]));
				
				userRoleService.save(roleUser);
			}
		}
		
		userList = userService.findAll();
		List<Role> roleDtoList = roleService.findAll();
		
		roleList = new ArrayList<>();
		for(Role role: roleDtoList) {
			roleList.add(new RoleVO(role, false));
		}
		
		return SUCCESS;
	}


}