package productManage.action.warehouse;

import java.util.Calendar;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;

import productManage.action.PageAction;
import productManage.model.User;
import productManage.model.lhj.Material;
import productManage.model.lhj.WareHouse;
import productManage.model.wjx.MaterialInput;
import productManage.model.wjx.MaterialOutput;
import productManage.model.wjx.Store;
import productManage.service.material.MaterialService;
import productManage.service.warehouse.WarehouseManagerService;


/**
 * @author WHQ
 * @date 创建时间2016-3-28
 */
public class MaterialInAction extends PageAction{
	
	@Autowired
	private WarehouseManagerService warehouseservice;
	@Autowired
	private MaterialService materialservice;
	private String date="";
	private String materialCode;
	
    /**
     * 用于ajax的参数传递：根据日期获取该日期下的详细出库单
     */
	private String dateAjax;
	private String inputDateDetailAjax;
	private String materialCodeAjax;
	private String materialDetailAjax;
	public String showAllMaterials(){
		System.out.println("enter MaterialInAction");
		this.pageBean=warehouseservice.getAllStores(this.page,this.rowsPerPage);
		return "success";
	}
	
	public  String materialDetail(){
		System.out.println("enter materialDetail");
		
		Material m=materialservice.getMaterialByCode(materialCodeAjax);
		System.out.println(m.getMaterialName());
		JSONArray json = new JSONArray();
    	try {
	    	JSONObject jo=new JSONObject();
	    	jo.put("materialName", m.getMaterialName());
	    	jo.put("materialCode", m.getMaterialCode());
	    	jo.put("colorCode", m.getColorCode());
	    	
	    	
	    	json.put(jo);
    	} catch (JSONException e) {
    		e.printStackTrace();
    	}
    	setMaterialDetailAjax(json.toString());
		return SUCCESS;
	}
	public String searchMaterial(){
		System.out.println("enter serachMaterial");
		return "success";
	}
	
	public String materialInManage(){
		System.out.println("enter materialInManage");
    	Calendar calendar = Calendar.getInstance();
    	System.out.println(getDate());
    	if(getDate().equals("")||getDate() == null){
    		calendar = null;
    	}else{
    		//时间用-分割
    		String[] dates = getDate().split("-");
    		calendar.set(Integer.parseInt(dates[0]), Integer.parseInt(dates[1])-1, Integer.parseInt(dates[2]));
    	}
    	this.pageBean = warehouseservice.getMaterialInputList(calendar, this.page, this.rowsPerPage);
    	setDate("");

		return "success";
	}
	
	public String materialInDetail(){
		Calendar cal = Calendar.getInstance();
    	String[] dates = getDateAjax().split("-");
    	cal.set(Integer.parseInt(dates[0]), Integer.parseInt(dates[1])-1, Integer.parseInt(dates[2]));
    	List<MaterialInput> results = warehouseservice.getMaterialInputList(cal);
    	System.out.println("in action ajax0"+getDateAjax());
    	JSONArray json = new JSONArray();
    	try {
	    	for(MaterialInput mo:results){
	    		Material materialT = mo.getMaterial();
	    		WareHouse warehouseT = mo.getWarehouse();
	    		User userT = mo.getUser();
	    		Store storeT = warehouseservice.getStore(mo.getMaterial().getMaterialCode(), mo.getWarehouse().getWarehouseid());
	    		JSONObject jo = new JSONObject();
	    		JSONObject material = new JSONObject();
	    		JSONObject warehouse = new JSONObject();
	    		JSONObject user = new JSONObject();
	    		JSONObject store = new JSONObject();
	    		jo.put("material", material);
	    		jo.put("warehouse", warehouse);
	    		jo.put("user", user);
	    		jo.put("store", store);
	    		material.put("materialName", materialT.getMaterialName());
	    		material.put("materialCode", materialT.getMaterialCode());
//	    		material.put("materialIngredient", materialT.getMaterialIngredient());
//	    		material.put("unitPrice", materialT.getUnitPrice());
//	    		material.put("materialType", materialT.getMaterialType());
//	    		material.put("colorCode", materialT.getColorCode());
//	    		material.put("colorDescription", materialT.getColorDescription());
	    		warehouse.put("warehouseid", warehouseT.getWarehouseid());
	    		warehouse.put("location", warehouseT.getLocation());
	    		warehouse.put("remain", warehouseT.getRemain());
	    		user.put("userName", userT.getUserName());
	    		store.put("remainVol", storeT==null?"":storeT.getRemainVol());
	    		jo.put("materialInputVol", mo.getMaterialInputVol());
	    		json.put(jo);
	    	}
    	} catch (JSONException e) {
    		e.printStackTrace();
    	}
    	setInputDateDetailAjax(json.toString());
    	return SUCCESS;
	}
	
	

	public WarehouseManagerService getWarehouseservice() {
		return warehouseservice;
	}

	public void setWarehouseservice(WarehouseManagerService warehouseservice) {
		this.warehouseservice = warehouseservice;
	}

	public String getDate() {
		return date;
	}

	public void setDate(String date) {
		this.date = date;
	}

	public String getMaterialCode() {
		return materialCode;
	}

	public void setMaterialCode(String materialCode) {
		this.materialCode = materialCode;
	}

	public String getDateAjax() {
		return dateAjax;
	}

	public void setDateAjax(String dateAjax) {
		this.dateAjax = dateAjax;
	}

	public String getInputDateDetailAjax() {
		return inputDateDetailAjax;
	}

	public void setInputDateDetailAjax(String inputDateDetailAjax) {
		this.inputDateDetailAjax = inputDateDetailAjax;
	}

	public String getMaterialCodeAjax() {
		return materialCodeAjax;
	}

	public void setMaterialCodeAjax(String materialCodeAjax) {
		this.materialCodeAjax = materialCodeAjax;
	}

	public String getMaterialDetailAjax() {
		return materialDetailAjax;
	}

	public void setMaterialDetailAjax(String materialDetailAjax) {
		this.materialDetailAjax = materialDetailAjax;
	}
	
	
	
	
	
}
