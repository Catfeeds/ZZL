package productManage.action.system;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.xml.soap.Detail;

import org.springframework.beans.factory.annotation.Autowired;

import productManage.action.PageAction;
import productManage.model.wy.Authority;
import productManage.model.wy.Module;
import productManage.model.wy.Role;
import productManage.service.system.AuthorityService;
import productManage.service.system.RoleService;

public class ManageRoleAuthorityAction extends PageAction{
	
	private static final long serialVersionUID = 1L;
	
	@Autowired
	private RoleService roleService;
	@Autowired
	private AuthorityService authorityService;
	
	private List<Role> roleList;
	private Role roleItem;
	private List<Object> authoList;
	private Authority detail;
	
	public RoleService getRoleService() {
		return roleService;
	}

	public void setRoleService(RoleService roleService) {
		this.roleService = roleService;
	}

	public List<Role> getRoleList() {
		return roleList;
	}

	public void setRoleList(List<Role> roleList) {
		this.roleList = roleList;
	}

	public Role getRoleItem() {
		return roleItem;
	}

	public void setRoleItem(Role roleItem) {
		this.roleItem = roleItem;
	}
	
	public List<Object> getAuthoList() {
		return authoList;
	}

	public void setAuthoList(List<Object> authoList) {
		this.authoList = authoList;
	}

	public Authority getDetail() {
		return detail;
	}

	public void setDetail(Authority detail) {
		this.detail = detail;
	}

	public String showRole(){
		this.pageBean = roleService.getRoleByPage(this.rowsPerPage, this.page);
		return SUCCESS;
	}
	
	public String getAuthorityDetail(){
		String authorityID = request.getParameter("authorityID");
		detail = authorityService.getAuthorityById(authorityID);
		return SUCCESS;
	}

	public String getAuthorityTree(){
		String fatherId = request.getParameter("id");
		
		//依次取高层节点
		authoList = new ArrayList<Object>();
		List<String> highAuthoList = authorityService.getAllHighAuthoName();
		for (int i = 0; i < highAuthoList.size(); i++) {
			String highAuthoName = highAuthoList.get(i);
			Map<String, Object> highNode = new HashMap<String, Object>();
			highNode.put("id", "high" + highAuthoName);
			highNode.put("text", highAuthoName);
			
			//依次取中层节点
			List<Object> middleNodeList = new ArrayList<Object>();
			List<String> middleAuthoNameList = authorityService.getMiddleByHigh(highAuthoName);
			for(int j = 0;j < middleAuthoNameList.size();j++){
				String middleAuthoName = middleAuthoNameList.get(j);
				
				Map<String, Object> middleNode = new HashMap<String, Object>();
				middleNode.put("id", "middle"+middleAuthoName);
				middleNode.put("text", middleAuthoName);
				
				//取底层节点
				List<Object> lowNodeList = new ArrayList<Object>();
				List<Authority> lowAuthoList = authorityService.getLowByMiddleHigh(middleAuthoName, highAuthoName);
				for(int k = 0;k < lowAuthoList.size();k++){
					Authority lowAuthority = lowAuthoList.get(k);
					
					Map<String, Object> lowNode = new HashMap<String, Object>();
					lowNode.put("id", lowAuthority.getAuthorityID()+"");
					lowNode.put("text", lowAuthority.getLowAuthName());
					lowNode.put("children", false);
					
					lowNodeList.add(lowNode);
					
				}
				
				middleNode.put("children", lowNodeList);
				middleNodeList.add(middleNode);
			}
			highNode.put("children", middleNodeList);
			
			authoList.add(highNode);
		}
		return SUCCESS;
	}

}
